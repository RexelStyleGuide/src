@import "rx-global";

@include exports("rx-base") {

  // Meta styles are included in all builds, as they are a dependancy of the Javascript.
  // Used to provide media query values for javascript components.
  // Forward slash placed around everything to convince PhantomJS to read the value. 

  meta.foundation-version {
    font-family: "/5.5.1/";
  }

  meta.foundation-mq-small {
    font-family: "/" + unquote($small-up) + "/";
    width: lower-bound($small-range);
  }

  meta.foundation-mq-small-only {
    font-family: "/" + unquote($small-only) + "/";
    width: lower-bound($small-range);
  }

  meta.foundation-mq-medium {
    font-family: "/" + unquote($medium-up) + "/";
    width: lower-bound($medium-range);
  }

  meta.foundation-mq-medium-only {
    font-family: "/" + unquote($medium-only) + "/";
    width: lower-bound($medium-range);
  }

  meta.foundation-mq-large {
    font-family: "/" + unquote($large-up) + "/";
    width: lower-bound($large-range);
  }

  meta.foundation-mq-large-only {
    font-family: "/" + unquote($large-only) + "/";
    width: lower-bound($large-range);
  }

  meta.foundation-mq-xlarge {
    font-family: "/" + unquote($xlarge-up) + "/";
    width: lower-bound($xlarge-range);
  }

  meta.foundation-mq-xlarge-only {
    font-family: "/" + unquote($xlarge-only) + "/";
    width: lower-bound($xlarge-range);
  }

  meta.foundation-mq-xxlarge {
    font-family: "/" + unquote($xxlarge-up) + "/";
    width: lower-bound($xxlarge-range);
  }

  meta.foundation-data-attribute-namespace {
    font-family: #{$namespace};
  }

  @if $include-html-global-classes {

    // MUST BE 100% FOR OFF CANVAS TO WORK 
    html, body { height: 100%; }

    // SET BOX-SIZING GLOBALLY TO HANDLE PADDING AND BORDER WIDTHS 
    *,
    *:before,
    *:after {
      @include box-sizing(border-box);
    }

    html,
    body { font-size: $base-font-size; }

    // SETTING DEFAULT BODY STYLES 
    body {
      background: $body-bg;
      color: $body-font-color;
      padding: 0;
      margin: 0;
      font-family: $body-font-family;
      font-weight: $body-font-weight;
      font-style: $body-font-style;
      line-height: $base-line-height; // Set to $base-line-height to take on browser default of 150% 
      position: relative;
      cursor: $cursor-auto-value;
    }

  a:hover { cursor: $cursor-pointer-value; }

    // Grid Defaults to get images and embeds to work properly
    img { max-width: 100%; height: auto; }

    img { -ms-interpolation-mode: bicubic; }

    #map_canvas,
    .map_canvas {
      img,
      embed,
      object { max-width: none !important;
      }
    }

    // MISC HELPER CLASSES
    .left { float: left !important; }
    .right { float: right !important; }
    .clearfix { @include clearfix; }

    // HIDE VISUALLY & FROM SCREEN READERS
    .hide { display: none; }
    // HIDE VISUALLY & FROM SCREEN READERS BUT MAINTAIN LAYOUT
    .invisible { visibility: hidden; }

    // FONT SMOOTHING
    // Antialiased font smoothing works best for light text on a dark background.
    // Apply to single elements instead of globally to body.
    // Note this only applies to webkit-based desktop browsers and Firefox 25 (and later) on the Mac.
    .antialiased { -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; }

    // GET RID OF GAP UNDER IMG'S BY USING DISPLAY:INLINE-BLOCK
    img {
      display: inline-block;
      vertical-align: middle;
    }

    // ===== GLOBAL RESETS FOR FORMS =====
    // MAKE SURE TEXTAREA HAS A HEIGHT
    textarea { height: auto; min-height: 50px; }
    // MAKE SELECT ELEMENTS 100% WIDTH BY DEFAULT
    select { width: 100%; }
  }
}